// ***********************************************
// Compiler Generated Functions
// ***********************************************

#include <iostream>
#include <string>

using namespace std;

/*
Member function	typical form for class C:
-----------------------------------------
1. Default constructor	C::C();
2. Destructor	        C::~C();

3. Copy constructor	    C::C (const C&) or C::C(const &C c);    //shallow or hard copy
4. Copy assignment	    C& operator= (const C&);

5. Move constructor	    C::C (C&&) or C::C(C&& c);  //shallow or hard copy
6. Move assignment	    C& operator= (C&&);


Member function	    implicitly defined:	                                                    default definition:
Default constructor	if no other constructors	                                            does nothing
Destructor	        if no destructor	                                                    does nothing
Copy constructor	if no move constructor and no move assignment	                        copies all members
Copy assignment	    if no move constructor and no move assignment	                        copies all members
Move constructor	if no destructor, no copy constructor and no copy nor move assignment	moves all members
Move assignment	    if no destructor, no copy constructor and no copy nor move assignment	moves all members

 ____________________________________________________
|   1        2        3        4        5        6   |
|          ... autogenerated if no ...               |
|____________________________________________________|
|                                                    | 
| self                                               |
|   2      self       2*                2        2   |
|            3*     self                3        3   |
|            4*       4*     self       4        4   |
|   5        5        5               self       5   |
|            6        6                 6      self  |
|____________________________________________________|
* added in C++ 11

Note:
1. They are public and inline.
2. They are generated only if they are needed.

*/

// empty class Dog
class Dog_empty {};

// is equivalent to:
class Dog {
    //C++ 03:
    Dog();                      // default constructor
    Dog(const Dog&);            // copy constructor
    Dog& operator=(const Dog&); //copy assignment operator
    ~Dog();                     // destructor
    //C++ 11:
    Dog(Dog&&);            // move constructor
    Dog& operator=(Dog&&); // move assignment operator
};

class Cow {                              // 1, 2, 4
    Cow& operator=(const Cow&) = delete; // counted as declared by user
};

class Cat {            // 3, 4
    Cat(const Cat&){}; // copy constructor
};

class Duck {      //  4 // class cannot be copied
    Duck(Duck&&); // move constructor
};

class Frog {                      // 4
    Frog(int = 0){};              // default constructor
    Frog(const Frog&, int = 0){}; // copy constructor
    Frog(Frog&&, int = 0) {
    } // move constructor
};

class Fish { // 1, 2, 3
    ~Fish() {
    } // destructor
};
